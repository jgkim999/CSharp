services:
  # rabbitmq
  rabbitmq:    
    image: rabbitmq:management
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
      - "15692:15692"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: 1234
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./rabbitmq/lib:/var/lib/rabbitmq/'
      - ./rabbitmq/log:/var/log/rabbitmq/'
    networks:
      - default
      - compose_network
  # mysql
  mysql:
    image: mysql:lts
    container_name: mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: test-db
      MYSQL_ROOT_PASSWORD: "1234"
      MYSQL_ROOT_HOST: '%'
      TZ: Asia/Seoul
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    volumes:
      - ./mysql/config/mysql.conf:/etc/mysql/my.cnf
      - ./mysql/data:/var/lib/mysql
    networks:
      - default
      - compose_network
  # mysql-exporter
  mysql-exporter:
    image: bitnami/mysqld-exporter:latest
    container_name: mysql-exporter
    restart: unless-stopped
    ports: 
      - "9104:9104"
    command: 
      #- â€”mysqld.username=exporter:qwer34##$$
      - --config.my-cnf=/cfg/.my.cnf
      - --mysqld.address=mysql:3306
    volumes:
      - "./mysqlexporter/.my.cnf:/cfg/.my.cnf"
    links:
      - mysql
    depends_on:
      - mysql 
    networks:
      - default
      - compose_network  
  # redis
  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    hostname: redis
    labels:
      - "name=redis"
      - "mode=standalone"
    ports:
      - 6379:6379
      - 6380:6379
    volumes:
      - ./redis/data:/data
    networks:
      - default
      - compose_network    
  # redis prometheus exporter
  redis-exporter:
    image: bitnami/redis-exporter:latest
    container_name: redis_exporter
    restart: unless-stopped
    ports:
      - 9121:9121
    command:
      - '--redis.addr=redis://redis:6379'
    links:
      - redis
      - prometheus
    networks:
      - default
      - compose_network
  # InfluxDB - Database for sensor data
  influxdb:
    image: influxdb:latest
    container_name: influxdb
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - "8086:8086"
    volumes:
      - ./influxdb/etc:/etc/influxdb2'
      - ./influxdb/lib:/var/lib/influxdb2'
    networks:
      - default
      - compose_network
  # prometheus
  prometheus:
    image: bitnami/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    user: root
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/data:/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - default
      - compose_network
  # grapana
  grapana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    user: "1000:1000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    ports:
      - 3000:3000
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana:/etc/grafana/provisioning/datasources
    networks:
      - default
      - compose_network
  portainer:
    image: portainer/portainer-ce:alpine
    container_name: portainer
    restart: unless-stopped
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer/data:/data
    networks:
      - default
      - compose_network
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    networks:
      - default
      - compose_network
  node-exporter:
    image: bitnami/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    ports:
      - 9100:9100
    networks:
      - default
      - compose_network
  nexus:
    image: sonatype/nexus3:latest
    container_name: nexus
    restart: unless-stopped
    user: root
    volumes:
      - ./nexus/data:/nexus-data
    ports:
      - 8081:8081
      - 8082:8082
    networks:
      - default
      - compose_network
  seq:
    image: datalust/seq:latest
    container_name: seq
    restart: unless-stopped
    environment:
      ACCEPT_EULA: Y
    volumes:
      - ./seq/data:/data
    ports:
      - 10000:80
      - 10001:5341
    networks:
      - default
      - compose_network
  loki:
    image: grafana/loki:latest
    container_name: loki
    command: -config.file=/etc/loki/local-config.yaml    
    user: root
    ports:
       - 3100:3100
       - 9096:9096
    healthcheck:
        test: wget -q --tries=1 -O- http://localhost:3100/ready 
        interval: 3s
        timeout: 3s
        retries: 10
        start_period: 10s
    volumes:
      - ./loki/data:/loki
    networks:
      - default
      - compose_network
  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - /var/log:/var/log
    networks:
      - default
      - compose_network
networks:
  compose_network:
    driver: bridge
