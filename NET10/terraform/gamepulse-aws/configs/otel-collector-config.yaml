# OpenTelemetry Collector 구성 파일
# GamePulse 애플리케이션을 위한 텔레메트리 데이터 수집 및 전송 설정

# 수신기(Receivers) 구성
receivers:
  # OTLP 수신기 - 애플리케이션으로부터 텔레메트리 데이터 수신
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
        max_recv_msg_size: 4194304  # 4MB
        max_concurrent_streams: 16
      http:
        endpoint: 0.0.0.0:4318
        cors:
          allowed_origins:
            - "*"
          allowed_headers:
            - "*"
          max_age: 7200

  # Prometheus 메트릭 수신기 (자체 메트릭 수집용)
  prometheus/internal:
    config:
      scrape_configs:
        - job_name: 'otel-collector'
          scrape_interval: 30s
          static_configs:
            - targets: ['localhost:8888']

# 프로세서(Processors) 구성
processors:
  # 배치 프로세서 - 성능 최적화를 위한 배치 처리
  batch:
    timeout: 1s
    send_batch_size: 1024
    send_batch_max_size: 2048

  # 메모리 제한 프로세서 - 메모리 사용량 제한
  memory_limiter:
    limit_mib: 512
    spike_limit_mib: 128
    check_interval: 5s

  # 리소스 프로세서 - 리소스 속성 추가/수정
  resource:
    attributes:
      - key: service.name
        value: gamepulse
        action: upsert
      - key: service.version
        from_attribute: service.version
        action: upsert
      - key: deployment.environment
        value: ${ENVIRONMENT}
        action: upsert
      - key: k8s.cluster.name
        value: gamepulse-cluster
        action: upsert

  # 속성 프로세서 - 민감한 정보 제거 및 속성 정리
  attributes:
    actions:
      # HTTP 헤더에서 민감한 정보 제거
      - key: http.request.header.authorization
        action: delete
      - key: http.request.header.cookie
        action: delete
      # 사용자 정보 마스킹
      - key: user.email
        action: hash
      - key: user.id
        action: hash

  # 필터 프로세서 - 불필요한 데이터 필터링
  filter:
    metrics:
      exclude:
        match_type: regexp
        metric_names:
          - ".*grpc_io.*"
          - ".*_bucket"
    traces:
      exclude:
        match_type: strict
        span_names:
          - "health_check"
          - "readiness_check"

# 익스포터(Exporters) 구성
exporters:
  # Prometheus 익스포터 - 메트릭 데이터 전송
  prometheus:
    endpoint: "0.0.0.0:8889"
    namespace: gamepulse
    const_labels:
      environment: ${ENVIRONMENT}
      cluster: gamepulse-cluster
    metric_expiration: 180m
    enable_open_metrics: true

  # Loki 익스포터 - 로그 데이터 전송
  loki:
    endpoint: http://${LOKI_ENDPOINT}:3100/loki/api/v1/push
    tenant_id: gamepulse
    labels:
      attributes:
        service.name: "service_name"
        service.version: "service_version"
        deployment.environment: "environment"
      resource:
        container.name: "container_name"
        k8s.pod.name: "pod_name"
        k8s.namespace.name: "namespace"
    format: json
    timeout: 30s
    retry_on_failure:
      enabled: true
      initial_interval: 5s
      max_interval: 30s
      max_elapsed_time: 300s

  # Jaeger 익스포터 - 트레이스 데이터 전송
  jaeger:
    endpoint: ${JAEGER_ENDPOINT}:14250
    tls:
      insecure: true
    timeout: 30s
    retry_on_failure:
      enabled: true
      initial_interval: 5s
      max_interval: 30s
      max_elapsed_time: 300s

  # OTLP 익스포터 - 다른 OpenTelemetry Collector로 전송 (선택사항)
  otlp/jaeger:
    endpoint: ${JAEGER_ENDPOINT}:4317
    tls:
      insecure: true
    compression: gzip
    timeout: 30s

  # 로깅 익스포터 - 디버깅용
  logging:
    loglevel: info
    sampling_initial: 2
    sampling_thereafter: 500

# 확장(Extensions) 구성
extensions:
  # 헬스 체크 확장
  health_check:
    endpoint: 0.0.0.0:13133
    path: /health

  # pprof 확장 - 성능 프로파일링
  pprof:
    endpoint: 0.0.0.0:1777

  # zpages 확장 - 내부 상태 모니터링
  zpages:
    endpoint: 0.0.0.0:55679

# 서비스 파이프라인 구성
service:
  # 확장 활성화
  extensions: [health_check, pprof, zpages]

  # 파이프라인 정의
  pipelines:
    # 메트릭 파이프라인
    metrics:
      receivers: [otlp, prometheus/internal]
      processors: [memory_limiter, resource, batch, filter]
      exporters: [prometheus, logging]

    # 로그 파이프라인
    logs:
      receivers: [otlp]
      processors: [memory_limiter, resource, attributes, batch]
      exporters: [loki, logging]

    # 트레이스 파이프라인
    traces:
      receivers: [otlp]
      processors: [memory_limiter, resource, attributes, batch, filter]
      exporters: [jaeger, logging]

  # 텔레메트리 설정
  telemetry:
    logs:
      level: info
      development: false
      sampling:
        initial: 2
        thereafter: 500
    metrics:
      level: detailed
      address: 0.0.0.0:8888
    traces:
      level: basic